#+LaTeX_xHEADER: \usepackage[spanish]{babel}
#+LANGUAGE: es
#+Latex_class: koma-report
#+AUTHOR: Niv Sardi <niv.sardi@unq.edu.ar>
#+TITLE: Una propuesta para un Netflix Nacional y Popular

* Abstract
A fines de realizar un 'Netflix Argentino' Se propone extender el desarrollo
hecho para
*[[https://github.com/popcorn-team/popcorn-app][popcorn-time]]* [fn::https://github.com/popcorn-time/][fn::https://github.com/popcorn-team]

*nota:* Si bien la aplicación Open Source no es de ninguna manera ilegal, su
uso puede estar en violaciones de derechos de author en ciertas
juridiciónes.
\vfill
[[file:patria-o-netflix.png]]
\vfill
* Requerimientos
** Streaming Adaptativo
La calidad del video se adapta a la conexión del usuario. Cuando las
condiciones de redes se degradan el software lo detecta y sigue sin
interrumpir la reproducción usando una fuente de menor requerimiento de
ancho de banda y/o procesamiento.

** Multiples Idiomas
El usuario puede elegir ver el material en varios idiomas. El cambio
debe ser casi-instantaneo y quedar sincronizado.

** Subtitulos
El usuario puede elegir ver el material subtitulado en varios idiomas.
El cambio debe ser casi-instantaneo y quedar sincronizado.

** Protección Digital de Derechos (DRMs)
Ciertos contenidos deben circular cifrados y ser desencriptados de manera
segura en la memoria del reproductor previamente a su visualización. El esquema
de DRMs elegido debe satisfacer los requerimientos de los broadcasters
internacionales.

** Persistencia de datos de usuarios
El usuario tiene una clave que lo identifica en el sistema, lo que le permite
volver al mismo estado a dentro de la plataforma independientemente del
dispositivo que use para conectarse.

** Sugerencias
Al consultar la ficha de un material el sistema sugiere al usuario
materiales conexos aprendiendo a medida de su uso los gustos del usuario
para mejorar las sugerencias.

** Multiples dispositivos
La plataforma debe ser portable a varios dispositivos y sistemas operativas,
como mínimo debe poder desplegarse sobre Linux, MacOSX, Microsoft Windows,
=Android= y =iOS=.

** Excelencia técnica
Puede parecer superficial, pero es importante estar seguros que se puede
llegar a la misma calidad de producto final que Netflix para que este
proyecto sea relevante (i.e. usado).

* Propuesta tecnica
El proyecto *[[https://github.com/popcorn-team/popcorn-app][popcorn-time]]* usa bittorent como storage de material
audiovisual y permite la visualización de peliculas compartiendo entre todos
los visualizadores la carga de ancho de banda. Esta solución permite reducir
dramáticamente la infraestructura necesaria a una plataforma de streaming de
calidad y tiene la ventaja de escalar naturalmente cuando crece la base de
usuarios.

Actualmente, *[[https://github.com/popcorn-team/popcorn-app][popcorn-time]]* usa las bases de datos y API públicas de [[https://yts.re/home][YIFY
Torrents]][fn::https://yts.re/api] y [[http://trakt.tv/][Trakt.tv]][fn::http://trakt.tv/api-docs] para
encontrar el material a disposición.

Para que *[[https://github.com/popcorn-team/popcorn-app][popcorn-time]]* responda a los
requerimientos descritos en la primera parte de este documento es necesario
realizar algunas modificaciones, a
continuación se argumenta la factibilidad de esas adaptaciones.

** Streaming Adaptativo
La implementación de streaming adaptativo sobre redes de pares (P2P) no es
un tema nuevo, y varios papers fueron publicados sobre el tema. La fundación
[[http://www.p2p-next.org/][P2P-Next]][fn::http://www.p2p-next.org/] fundada por la Unión Europea trabaja
sobre el tema desde 2005.

Por otro lado, la industria esta normalizando a
[[https://en.wikipedia.org/wiki/Adaptive_bitrate_streaming#MPEG-DASH][DASH]][fn::https://en.wikipedia.org/wiki/Adaptive_bitrate_streaming#MPEG-DASH]
como norma de streaming adaptativo. La ventaja de DASH radica en cortar el
material en pequeños paquetes, representando una unidad de tiempo a la
presentación (/i.e./ 10s de material por paquete), lo que permite simplificar
la sincronización como el cache en una red de distribución no especializada
en medios audiovisuales.

Para convencernos de la factibilidad de adaptar el protocolo bittorrent a
las necedidas de streaming adaptativo destacamos 2 publicaciones tecnicas:
1. [[http://www.research.att.com/export/sites/att_labs/techdocs/TD_101236.pdf][Joint-Family: Enabling Adaptive Bitrate Streaming in Peer-to-Peer
   Video-on-Demand]][fn::http://www.research.att.com/export/sites/att_labs/techdocs/TD_101236.pdf]
   publicado por AT&T[fn::https://www.research.att.com] detalla
   optimizaciones de algoritmos de selección de pares que rinden posibles el
   cambio de calidad sin interrupción
2.[[http://pdf.communicationx.net/p/providing-incentives-in-p2p-adaptive-streaming-w9738.html][Providing Incentives in P2P Adaptive
  Streaming]][fn::http://pdf.communicationx.net/p/providing-incentives-in-p2p-adaptive-streaming-w9738.html]
  explica como adaptar DASH a redes P2P

** Multiples Idiomas
El problema de servir multiples flujos de audio es en realidad muy
equivalente al problema de Streaming Adaptativo. Usando DASH, se puede
considerar cada audio como una calidad distinta, saltando de uno a otro como
se haría en caso de malas condiciones de red.

** Subtitulos
Actualmente *[[https://github.com/popcorn-team/popcorn-app][popcorn-time]]* soporta la incrustación de subtitulos. Para
cumplir con el requerimiento de instantaneidad es necesario realizar una
pequeña optimización para hacer la carga de estos de manera asincronica. Este desarrollo no
presenta ningún desafío técnico.

** Protección Digital de Derechos (DRMs)
El problema de garantizar Protección Digital de Derechos es mas político que
técnico. Desde la técnica, la protección no tiene mucho sentido ya que
cuando se presenta el contenido a la pantalla de un usuario corriendo
soberanamente su sistema de explotación es imposible impedirle grabar el
audio y video que se esta reproduciendo sin violar fundamentalmente su
privacidad (y varias leyes). 

Por otro lado, el arte de la criptografia es de hacer que el descubrimiento
de datos privados sea bastante difícil (/i.e./ requiera esfuerzo) para que el
interesado (/i.e./ atacante) renuncie a la tarea de romper el código criptográfico.

Independientemente, presentamos a continuación 2 caminos tecnológicos
garantizando un nivel de criptografia suficiente (a nuestra medida).

En Abril de 2013, Netflix [[http://techblog.netflix.com/2013/04/html5-video-at-netflix.html][anunciaba]]
[fn::http://techblog.netflix.com/2013/04/html5-video-at-netflix.html] mover
su tecnología de streaming de [[http://support.microsoft.com/gp/lifean45#sl5][Microsoft Silverlight]]
[fn::http://support.microsoft.com/gp/lifean45#sl5]a Tecnologías de la Web
(=HTML5=). Para adaptar =HTML5= a sus necesidades, Netflix propone 3 nuevas
extensiones al estandard. Una parte central de su preocupación fue
garantizar la continuidad de los DRMs, 2 de estas extenciones estan
dirigidas directamente al tema.

1. la [[http://www.w3.org/TR/WebCryptoAPI/][Web Crypto API]] [fn::http://www.w3.org/TR/WebCryptoAPI/] es una
   extención al estandard =HTML5= para que los navegadores expongan
   funciones de cryptografía avanzada. Netflix esta tan interesado por esta
   extención que ya [[http://techblog.netflix.com/2013/07/nfwebcrypto-web-cryptography-api-native.html][publicó código opensource]]
   [fn::http://techblog.netflix.com/2013/07/nfwebcrypto-web-cryptography-api-native.html]
   implementando esta característica como una extensión al navegador chrome de
   Google

   Esta extensión permite garantizar que las claves de usuarios y contenidos
   no puedan ser inspeccionadas por código malicioso corriendo en la maquina
   del usuario.

2. el draft [[https://dvcs.w3.org/hg/html-media/raw-file/tip/encrypted-media/encrypted-media.html][Encrypted Media Extensions]] (EME)
   [fn::https://dvcs.w3.org/hg/html-media/raw-file/tip/encrypted-media/encrypted-media.html](EME)
   permite enchufar DRMs (/i.e./ programas privativos cerrados) tradicionales
   al navegador para descifrar el contenido.

Hoy implementada en Windows 8 y Chrome OS, esta solución fue aceptada
técnicamente por los broadcasters.

*nota*: usar Encrypted Media Extensions es una perdida de control y
soberanía,ya que requiere el uso de software privativo no auditable.
Recomendamos en contra de su uso. Se puede implementar un sistema
criptografico completo usando solamente la Web Crypto API.

*nota*: por otro lado Encrypted Media Encrypted en realidad solo permite
cargar un binario (software privativo) que se ocupa de la desencriptación del
material. Si bien Netflix esta haciendo lobby sobre los actores tecnológicos
para que integren EME en sus plataformas, parece lógico que no distribuyan
la tecnología que pactan con los productores de contenido. resumiendo:
usando EME es poco probable que Netflix colabore en distribuir su metodo de
DRM, ya que es parte de sus 'secretos industriales' garantizando su posición
ventajosa frente a sus competidores.

** Persistencia de datos de usuarios
Los portales de usuario no son cosa nueva, el estado ya tiene varios, se
propone conectar *[[https://github.com/popcorn-team/popcorn-app][popcorn-time]]* a la plataforma [[http://connectate.gob.ar][Connectate]]
[fn::http://connectate.gob.ar] desarrollada por Educ.ar para que los
usuarios puedan bajarse contenidos producidos para el [[https://encuentro.gov.ar][Canal Encuentro]]
[fn::https://encuentro.gov.ar].

Por otro lado, para mejor integración y mas capacidades de API, se puede
pensar en integrarse a [[https://www.mozilla.org/en-US/persona/][Mozilla Personas]] [fn::https://www.mozilla.org/en-US/persona/].

las dos opciones brindan una API que permite implementar la persistencia.

** Sugerencias
hay varios sistemas opensource de recomendaciones, algunos de ellos se
pueden ver en el [[https://en.wikipedia.org/wiki/Netflix_prize][Netflix Prize]].

** Multiples dispositivos
La implementación actual de *[[https://github.com/popcorn-team/popcorn-app][popcorn-time]]* se basa sobre la tecnologia
=HTML5=, usando herramientas de la web para hacer una applicación de
escritorio. Realmente, *[[https://github.com/popcorn-team/popcorn-app][popcorn-time]]* es un servidor web, con un
codigo de pagina y un navegador en un mismo paquete.

El uso de esta tecnología habilita a reusar desarrollo en varias
plataformas, naturalmente es fácil servir el mismo aplicativo en la web y
dejar al usuario usar su navegador casero para acceder al servicio, pero
también todas las plataformas móviles modernas (=Android=, =iOS=,
=BlackBerry=, =FirefoxOS=, =Windows8 Mobile=,…) permiten escribir
applicaciones en =HTML5=.

Es más, se [[http://www.developer.com/ws/android/development-tools/taming-android-with-html5.html][recomienda
]][fn::http://www.developer.com/ws/android/development-tools/taming-android-with-html5.html]
usar =HTML5= para escribir applicaciones portables.

Finalmente, proyectos como [[http://fmtvp.github.io/tal/][Television Application
Layer]][fn::http://fmtvp.github.io/tal/] de la [[https://bbc.co.uk][BBC]][fn::https://bbc.co.uk]
invitan a
los productores de Smart-TV a integrar tecnologías web y particularmente el
motor de renderizado Webkit que usa *[[https://github.com/popcorn-team/popcorn-app][popcorn-time]]*. Esto nos permite asumir
que portar la aplicación a televisores inteligentes es posible y
relativamente fácil.

** Excelencia Técnica
*[[https://github.com/popcorn-team/popcorn-app][popcorn-time]]* esta escrita usando estandares de excelencia técnica de la
industria como [[http://nodejs.org/][NodeJS]], [[http://learnboost.github.io/stylus/][Stylus]], [[http://backbonejs.org/][Backbone]], [[http://marionettejs.com/][Marionette]] y [[https://github.com/rogerwang/node-webkit][Node Webkit]].

Estas tecnologías son las mismas que se usan para escribir applicaciónes
comerciales lideres en materia de diseño y estabilidad.

No nos cabe ninguna duda que con el equipo adecuado podemos aspirar al mas
alto nivel técnico

* Ventajas
** Control de la plataforma
La convergencia digital, el movimiento a contenidos transmedia
multipantallas, la topologia cambiante de las pantallas que son hoy
computadoras, consolas de juego y conectores a las redes sociales
omnipresentes requiere una plataforma flexible, ágil, y completamente
dominada para poder seguir siendo relevante en un universo de diversión en
rápida transformación.

La única manera de garantizar esta flexibiliad y capacidad de respuesta es
de dominar completamente las tecnologías usadas.

A fines de reducir la cantidad de ingenieros necesarios no vemos otra opción
que de construir el paquete tecnológico basandonos en la fertil creatividad
del mundo Open Source.

Finalmente, el camino de la construcción de soberanía por el control y el
entendimiento local de la tecnología permite desde hoy de [[http://netflix.github.io/][usar tecnología
publicada por Netflix]]. Es poco probable que otro provedor pueda llegar sin
usar estas tecnologías a la misma excelencia técnica.

** Capacidad a portar a varios dispositivos (STB, TDA, Smart TV, Telefonos)
Los procesadores multimedia como el [[https://en.wikipedia.org/wiki/Texas_Instruments_OMAP][OMAP]]
[fn::https://en.wikipedia.org/wiki/Texas_Instruments_OMAP] tinen mucho
enfoque de la industria y cuentan  con muchas capacidades 'on-chip' de
descodificación de video, operaciones criptograficas y calculo
trigonometrico para cual se [[http://freedesktop.org/wiki/GstOpenMAX/][desarrollan applicaciones especificas]]
[fn::http://freedesktop.org/wiki/GstOpenMAX/].

El mercado esta lleno de implementaciones privativas para estos nuevos
dispositivos, pero las interfaces de programación (API) de estos 'vendors
privativos' divergen de dispositivo a dispositivo, y resultan ser dificiles
y costosos de integrar.

Solo un modelo de desarrollo con Software Libre y Estándares Abiertos
garantiza poder empujar optimizaciones de un dispositivo al otro.

El uso de tecnología web como plataforma base garantiza poder capitalizar el
esfuerzo que estan haciendo todos estos vendors para traer HTML5 a sus
plataformas.

** Reuso de componentes opensource publicados por José Netflix himself
Netflix es una empresa hija de internet. Fue posible gracias a su uso
masivo de [[http://techblog.netflix.com/2012/07/open-source-at-netflix-by-ruslan.html][tecnologías libres y estándares abiertos]]
[fn::http://techblog.netflix.com/2012/07/open-source-at-netflix-by-ruslan.html].
Conscientes de esta realidad, los ingenieros de Netflix contribuyen a la
comunidad Open Source.

Citando directamente de la fuente anterior:

  +  We have benefited from many other people contributing to open source,
     so we are paying back in kind. 

  +  Netflix was an early cloud adopter, moving all of our streaming
     services to run on top of AWS infrastructure.  We paid the pioneer tax
     – by encountering and working through many issues, corner cases and
     limitations.  We’ve captured the patterns that work  in our platform
     components and automation tools. We benefit from the scale effects of
     other AWS users adopting similar patterns, and will continue working
     with the community to develop the ecosystem.

  + External community contributions - by opening up we enable the larger
    developer community to: review, comment,  add test cases, bug fixes,
    ports and functional contributions to our components, benefiting
    everyone.

  + Improved code and documentation quality – we’ve observed that the peer
    pressure from “Social Coding” has driven engineers to make sure code is
    clean and well structured, documentation is useful and up to date.  What
    we’ve learned is that a component may be “Good enough for running in
    production, but not good enough for Github”.

  + Durability – we think any code will fare better over time if it’s
    actively developed by an open community and used widely vs. maintained
    by small number of engineers for a single workload.

** Apoyo y reconocimiento a una innovación argentina
Si bien La implementación actual de *[[https://github.com/popcorn-team/popcorn-app][popcorn-time]]* es una mezcla de
tecnologías que no tienen patria, la cocción de esas tecnologías fue realizada por un grupo
de talentosos desarrolladores Argentinos.

Este avance es un importante marcador de calidad que fue detectado por paginas como
[[http://www.reddit.com/r/PopCornTime/][Reddit]] [fn::http://www.reddit.com/r/PopCornTime/], [[http://techcrunch.com/tag/popcorn-time/][TechCrunch]]
[fn::http://techcrunch.com/tag/popcorn-time/], [[http://yro-beta.slashdot.org/story/14/03/15/1618223/controversial-torrent-streaming-app-popcorn-time-shuts-down-then-gets-reborn][Slashdot]]
[fn::http://yro-beta.slashdot.org/story/14/03/15/1618223/controversial-torrent-streaming-app-popcorn-time-shuts-down-then-gets-reborn]
y muchos mas. Estas paginas internacionales son altamente reconocidas en el
ambito técnico y posicionan a la Argentina como un actor relevante.

Políticamente parece importante:
+ que el estado reconozca la innovación nacional y la salude.
+ que el estado entienda que las revoluciones tecnológicas no se pueden
  combatir, se tienen que acompañar.
+ que el estado pueda retener talento nacional.
+ que los gestores de material multimedial demuestren no tener miedo de
  internet.

** Tecnologías Web
